{
  "title": "Skills",
  "list": [
    {
      "name": "의사소통",
      "descriptions": [
        "문제 해결 과정에서 발생하는 어려움에 대해서 두려워하지 않고, 적극적으로 질문하고 탐색하며 최선의 해결책을 찾기 위해 노력합니다.",
        "새로운 기술이나 도구를 배우는 것을 즐기고, 이를 직접 적용해보며 문제 해결 능력과 업무 효율성을 향상시키기 위해 노력합니다.",
        "팀원들과 함께 목표를 공유하고, 팀의 성과를 위해 적극적으로 의견을 제시하며 협업을 진행하는 것을 중요하게 생각합니다.",
        "사용자들의 요구사항을 항상 고려하여, 적극적으로 피드백을 받아들이고 서비스를 개선하기 위해 노력합니다."
      ]
    },
    {
      "name": "HTML/CSS",
      "descriptions": [
        "시멘틱한 요소를 사용하도록 노력합니다.",
        "css전처리기인 Sass를 사용할 수 있습니다.",
        "CSS-in-JS인 Styled-Components를 사용하여 스타일을 컴포넌트화하여 재사용할 수 있게 진행했습니다."
      ]
    },
    {
      "name": "JavaScript",
      "descriptions": [
        "ES6이후 문법을 사용할 수 있습니다.",
        "JavaScript를 이용하여 브라우저를 제어하고, DOM을 조작할 수 있습니다."
      ]
    },
    {
      "name": "TypeScript",
      "descriptions": [
        "코드의 안정성과 가독성을 중요하게 생각하여 TypeScript를 도입하여 프로젝트를 진행중입니다.",
        "TypeScript의 인터페이스, 제네릭 등의 고급 문법을 사용하여 유연하고 확장 가능한 코드를 작성할 수 있습니다."
      ]
    },
    {
      "name": "비동기",
      "descriptions": [
        "async-await 문법을 능숙하게 활용할 수 있습니다.",
        "axios를 이용하여 토큰 관리를 하며, refresh-token으로 새로운 토큰을 받아 적용한 경험이 있습니다.",
        "글 작성 후에도 새로운 게시물 목록을 빠르게 받아올 수 없는 문제가 있어, react-query의 mutation 기능을 도입하여 새로고침 없이 즉시 데이터를 받아오도록 개선했습니다.",
        "게시판 사용 시 5분마다 새로운 데이터를 자동으로 받아올 수 있도록, react-query의 기능을 활용하였습니다."
      ]
    },
    {
      "name": "React",
      "descriptions": [
        "컴포넌트 기반의 down-up 방식을 사용하여 코드의 재사용성과 유지보수성을 높였습니다.",
        "create-react-app을 활용하여 리액트로 개발했습니다",
        " Next.js 라이브러리를 활용하여 SEO최적화와 초기 로딩 속도를 개선하였습니다.",
        "전역 상태 관리를 위해 Recoil, Redux와 같은 라이브러리를 활용하여 프로젝트를 구성하였고, 이를 통해 데이터가 계속해서 넘겨지는 props drilling 문제를 해결했습니다."
      ]
    },
    {
      "name": "배포",
      "descriptions": [
        "Vercel 및 GitHub Pages를 이용하여 배포한 경험이 있습니다.",
        "도메인을 구매하여 이 이력서를 배포하였으며, HTTPS 프로토콜을 적용하여 보안적인 측면도 고려하였습니다."
      ]
    }
  ]
}
